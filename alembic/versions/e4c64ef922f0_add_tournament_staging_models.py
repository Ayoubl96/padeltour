"""Add tournament staging models

Revision ID: e4c64ef922f0
Revises: ee9ea1cc839d
Create Date: 2025-04-24 18:39:28.914017

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e4c64ef922f0'
down_revision: Union[str, None] = 'ee9ea1cc839d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tournament_stages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('stage_type', sa.String(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tournament_id', 'order', name='unique_stage_order_per_tournament')
    )
    op.create_table('tournament_brackets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.Column('bracket_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['stage_id'], ['tournament_stages.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stage_id', 'bracket_type', name='unique_bracket_type_per_stage')
    )
    op.create_table('tournament_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['stage_id'], ['tournament_stages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_group_couples',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('couple_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['couple_id'], ['tournament_couple.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['tournament_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'couple_id', name='unique_couple_per_group')
    )
    op.add_column('couple_stats', sa.Column('group_id', sa.Integer(), nullable=True))
    op.drop_constraint('unique_couple_stats', 'couple_stats', type_='unique')
    op.create_unique_constraint('unique_couple_stats', 'couple_stats', ['tournament_id', 'couple_id', 'group_id'])
    op.create_foreign_key(None, 'couple_stats', 'tournament_groups', ['group_id'], ['id'])
    op.add_column('matches', sa.Column('stage_id', sa.Integer(), nullable=True))
    op.add_column('matches', sa.Column('group_id', sa.Integer(), nullable=True))
    op.add_column('matches', sa.Column('bracket_id', sa.Integer(), nullable=True))
    op.add_column('matches', sa.Column('court_id', sa.Integer(), nullable=True))
    op.add_column('matches', sa.Column('scheduled_start', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('matches', sa.Column('scheduled_end', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('matches', sa.Column('is_time_limited', sa.Boolean(), nullable=True))
    op.add_column('matches', sa.Column('time_limit_minutes', sa.Integer(), nullable=True))
    op.add_column('matches', sa.Column('match_result_status', sa.String(), nullable=True))
    op.create_foreign_key(None, 'matches', 'tournament_stages', ['stage_id'], ['id'])
    op.create_foreign_key(None, 'matches', 'tournament_groups', ['group_id'], ['id'])
    op.create_foreign_key(None, 'matches', 'courts', ['court_id'], ['id'])
    op.create_foreign_key(None, 'matches', 'tournament_brackets', ['bracket_id'], ['id'])
    op.drop_index('ix_tournament_courts_court_id', table_name='tournament_courts')
    op.drop_index('ix_tournament_courts_tournament_id', table_name='tournament_courts')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_tournament_courts_tournament_id', 'tournament_courts', ['tournament_id'], unique=False)
    op.create_index('ix_tournament_courts_court_id', 'tournament_courts', ['court_id'], unique=False)
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.drop_column('matches', 'match_result_status')
    op.drop_column('matches', 'time_limit_minutes')
    op.drop_column('matches', 'is_time_limited')
    op.drop_column('matches', 'scheduled_end')
    op.drop_column('matches', 'scheduled_start')
    op.drop_column('matches', 'court_id')
    op.drop_column('matches', 'bracket_id')
    op.drop_column('matches', 'group_id')
    op.drop_column('matches', 'stage_id')
    op.drop_constraint(None, 'couple_stats', type_='foreignkey')
    op.drop_constraint('unique_couple_stats', 'couple_stats', type_='unique')
    op.create_unique_constraint('unique_couple_stats', 'couple_stats', ['tournament_id', 'couple_id'])
    op.drop_column('couple_stats', 'group_id')
    op.drop_table('tournament_group_couples')
    op.drop_table('tournament_groups')
    op.drop_table('tournament_brackets')
    op.drop_table('tournament_stages')
    # ### end Alembic commands ###
